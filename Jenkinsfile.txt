pipeline {
    agent any
    
    environment {
        GITHUB_PATH = credentials('github')
        GITHUB_URL = 'https://github.com/my-git-subhajit/lms-saas-backend.git'
        GIT_BRANCH = 'main'
        // SONAR_HOME = tool "sonar-scanner"
        DOCKER_HUB_KEY = credentials('subhajit-docker-hub')
        DOCKER_IMAGE = 'iamgood1989/sparrow_backend'
        DOCKER_TAG = "${env.BUILD_ID}"
    }
    
    stages {
        stage('GIT CLONE') {
            steps {
                script {
                    try {
                        checkout([$class: 'GitSCM', branches: [[name: env.GIT_BRANCH]], userRemoteConfigs: [[url: env.GITHUB_URL, credentialsId: 'github']]])
                    } catch (err) {
                        echo "Error during Git clone: ${err.message}"
                        currentBuild.result = 'FAILURE'
                        error "Stopping pipeline due to Git clone error."
                    }
                }
            }
        }
        
        stage("Docker Build Image") {
            steps {
                script {
                    sh "docker login -u ${DOCKER_HUB_KEY_USR} -p ${DOCKER_HUB_KEY_PSW}"
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }
        
        stage('Tag and Push Docker Image') {
            steps {
                script {
                    sh "docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:${DOCKER_TAG}"
                    sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }
    }
    
    post {
        always {
            node {
                cleanWs()
            }
            script {
                echo "Cleaning up workspace"
            }
        }
        
        failure {
            script {
                echo "Pipeline failed. Sending notifications..."
                // Add notification logic here (e.g., email, Slack)
            }
        }
        
        success {
            script {
                echo "Pipeline completed successfully!"
                // Add success notification logic here
            }
        }
    }
}
